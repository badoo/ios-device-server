buildscript {
    ext.kotlin_version = '1.2.41'
    ext.kotlinx_version = '0.22.3'
    ext.ktor_version = '0.9.1'

    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

group 'com.badoo.automation'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'application'

mainClassName = 'com.badoo.automation.deviceserver.ProgramKt'

sourceCompatibility = 1.8

repositories {
    jcenter()
    maven { url "https://dl.bintray.com/kotlin/kotlinx" }
    maven { url "https://dl.bintray.com/kotlin/ktor" }
}

dependencies {
    compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk8', version: kotlin_version
    compile group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: kotlin_version
    compile group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-io', version: kotlinx_version
    compile group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-jdk8', version: kotlinx_version

    compile group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.9.1'

    //region ktor dependencies
    compile("io.ktor:ktor-server-netty:$ktor_version") {
        exclude group: "org.jetbrains.kotlin", module: "kotlin-stdlib-jre8"
        exclude group: "org.jetbrains.kotlin", module: "kotlin-stdlib-jre7"
        exclude group: "org.jetbrains.kotlinx", module: "kotlinx-coroutines-jdk8"
        exclude group: "org.jetbrains.kotlinx", module: "kotlinx-coroutines-io"
    }
    compile("io.ktor:ktor-features:$ktor_version") {
        exclude group: "org.jetbrains.kotlin", module: "kotlin-stdlib-jre8"
        exclude group: "org.jetbrains.kotlin", module: "kotlin-stdlib-jre7"
        exclude group: "org.jetbrains.kotlinx", module: "kotlinx-coroutines-jdk8"
        exclude group: "org.jetbrains.kotlinx", module: "kotlinx-coroutines-io"
    }
    compile("io.ktor:ktor-jackson:$ktor_version") {
        exclude group: "org.jetbrains.kotlin", module: "kotlin-stdlib-jre8"
        exclude group: "org.jetbrains.kotlin", module: "kotlin-stdlib-jre7"
        exclude group: "org.jetbrains.kotlinx", module: "kotlinx-coroutines-jdk8"
        exclude group: "org.jetbrains.kotlinx", module: "kotlinx-coroutines-io"
    }
    compile group: 'io.ktor', name: 'ktor-auth', version: ktor_version
    //endregion

    //region log dependencies

    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    compile group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '4.11'
    //endregion

    //region json dependencies
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.2'
    //endregion

    //region process management dependencies
    compile group: 'net.java.dev.jna', name: 'jna', version: "4.5.1"
    compile group: 'com.zaxxer', name: 'nuprocess', version: "1.1.3"
    //region

    //region test dependencies
    testCompile group: "org.jetbrains.kotlin", name: "kotlin-test"
    testCompile group: "org.jetbrains.kotlin", name: "kotlin-test-junit"
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: "com.nhaarman", name: "mockito-kotlin", version: "1.5.0"
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.18.0'
    testCompile group: 'org.mockito', name: 'mockito-inline', version: '2.18.0'
    testCompile group: 'org.hamcrest', name: 'hamcrest-junit', version: '2.0.0.0'
    //endregion
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

kotlin {
    experimental {
        coroutines "enable"
    }
}
jar {
    manifest {
        attributes 'Main-Class': mainClassName
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

/**
 * For tests only
 */
run {
    systemProperty 'wda.bundle.path', '../ios/facebook/simulators/WebDriverAgentRunner-Runner.app'
    systemProperty 'wda.device.bundle.path', '../ios/facebook/devices/WebDriverAgentRunner-Runner.app'
    systemProperty 'device.server.config.path', ''
    systemProperty 'logback.configurationFile', 'logback-test.xml'
}

test {
    maxParallelForks = 4
}

kapt {
    useBuildCache = true
}

task wrapper(type: Wrapper) {
    gradleVersion="4.5.1"
}

// caching dependencies for docker
task resolveDependencies {
    doLast {
        project.buildscript.configurations.each { configuration ->
            println "Downloading dependencies for project.buildscript.configuration => " + configuration
            configuration.resolve()
        }

        println "Downloading dependencies for project.configuration => :compile"
        project.configurations['compile'].resolve()
        println "Downloading dependencies for project.configuration => :compileKotlin"
        project.configurations['compileKotlin'].resolve()
        println "Downloading dependencies for project.configuration => :testCompile"
        project.configurations['testCompile'].resolve()
        println "Downloading dependencies for project.configuration => :compileTestKotlin"
        project.configurations['compileTestKotlin'].resolve()
    }
}
